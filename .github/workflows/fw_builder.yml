name: Build cnc_firmware

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'MarlinFirmware/**' 
      - 'examples_gcode/**'
#  pull_request:
#    branches: [ main ]
    
  workflow_dispatch:
    inputs:
      board:
        required: true
        default: mega2560
        description: Board environment  
      config:
        required: true
        default: https://github.com/MarlinFirmware/Configurations/config/default
        description: Configuration directory
      repository:
        required: true
        default: MarlinFirmware/Marlin
        description: Marlin Repository
      ref:
        description: Branch / tag / SHA to checkout

permissions:
  contents: read
  
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Clone Marlin source code
      uses: actions/checkout@v3
      with:
        repository: MarlinFirmware/Marlin
        path: Marlin 
    
#    - name: Clone Marlin source code
#      uses: actions/checkout@v3
#      with: 
#        repository: ${{ github.event.inputs.repository }}
#        ref: ${{ github.event.inputs.ref }}
#        path: Marlin    
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install PlatformIO Core
      run: |
        pip install --upgrade platformio
        pio lib --global install olikraus/U8glib@^1.19.1  
#        pio pkg install --global --platform symlink://.        

#    - name: Pre-compiling configuration
#      run: |
#        cp -r "${{ github.event.inputs.config }}"/* Marlin/Marlin/
        
    - name: Compile firmware
      run: |
        pio run --project-dir Marlin --environment mega2560
        
#        ${{ github.event.inputs.board }}

#    - name: Build PlatformIO Project
#      run: pio run

#    env:
#      MARLIN_VERSION: ${{ matrix.branch }}
#      CONFIG_NAME: ${{ matrix.machine }}
#    name: ${{ matrix.machine }}-${{ matrix.branch }}
#    strategy:
#      fail-fast: false # Allow all machines to finish building
#      matrix:
#        branch: ${{ fromJson(
#          github.event_name == 'schedule' && '["bugfix-2.1.x"]' ||
#          github.event_name == 'pull_request' && '["bugfix-2.1.x", "2.1.2"]' ||
#          '["2.1.2"]') }}
#        machine:
#        - cnc_stroj_v2
        
          
#      - name: Check out MarlinBuilder
#        uses: actions/checkout@v3

#     - name: Check out MarlinFirmware
#       uses: actions/checkout@v3
#       with:
#         repository: MarlinFirmware/Marlin
#         ref: ${{ matrix.branch }}
#         path: Marlin
#         clean: true
#         fetch-depth: 1

#      - name: Upload src artifact
#        uses: actions/upload-artifact@v3
#        with:
#          name: ${{ matrix.machine }}-${{ matrix.branch }}
#          path: |
#            Marlin_*.zip
          
#      - name: Upload built artifact
#        uses: actions/upload-artifact@v3
#        with:
#          name: ${{ matrix.machine }}-${{ matrix.branch }}
#          path: |
#            firmware*
#            Marlin_*.zip          
          
#      - name: Upload Marlin-${{ matrix.machine }}-${{ matrix.branch }}.zip to release
#        if: ${{ github.event_name == 'release' }}
#          uses: actions/upload-release-asset@v1
#          env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ github.event.release.upload_url }}
#          asset_path: Marlin-Release.zip
#          asset_name: ${{ matrix.machine }}-${{ matrix.branch }}.zip
#          asset_content_type: application/zip                   

    - name: Show files changed
      run: |
        ls -la -R  ./
        ls -la -R  $HOME/
