name: Build cnc_firmware

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'MarlinFirmware/**' 
      - 'examples_gcode/**'
#  pull_request:
#    branches: [ main ]
    
  workflow_dispatch:
    inputs:
      board:
        required: true
        default: mega2560
        description: Board environment  
      config:
        required: true
        default: https://github.com/MarlinFirmware/Configurations/config/default
        description: Configuration directory
      repository:
        required: true
        default: MarlinFirmware/Marlin
        description: Marlin Repository
      ref:
        description: Branch / tag / SHA to checkout

permissions:
  contents: read
  
jobs:
  build:

    runs-on: ubuntu-latest
    
    env:
      MARLIN_VERSION: ${{ matrix.branch }}
      CONFIG_NAME: ${{ matrix.machine }}    
    
    strategy:
      fail-fast: false # Allow all machines to finish building
      matrix:
        branch: ${{ fromJson(
          github.event_name == 'schedule' && '["bugfix-2.1.x"]' ||
          github.event_name == 'pull_request' && '["bugfix-2.1.x", "2.1.2"]' ||
          '["2.1.2"]') }}
        machine:
        - cnc_stroj_v2_Ramps
        - default_Ramps      

    steps:
    - name: Checkout source repository
      uses: actions/checkout@v3
    
    - name: Check out MarlinFirmware
      uses: actions/checkout@v3
      with:
        repository: MarlinFirmware/Marlin
        ref: ${{ matrix.branch }}
        path: Marlin 
        clean: true
#        fetch-depth: 1
  
    - name: Select Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10' # Version range or exact version of a Python version to use, using semvers version range syntax.
        architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified      
 
    - name: Install PlatformIO Core
      run: |
        pip install --upgrade platformio
        pio lib --global install olikraus/U8glib@^1.19.1  
#        pio pkg install --global --platform symlink://.        

#    - name: Pre-compiling configuration
#      run: |
#        cp -r "${{ github.event.inputs.config }}"/* Marlin/Marlin/
        
    - name: Compile firmware
      run: |
        pio run --project-dir Marlin --environment mega2560
        
    - name: Tar files
      run: tar -cvf ${{ matrix.machine }}-${{ matrix.branch }}_artifact.tar ./

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: my-artifact
        path: ${{ matrix.machine }}-${{ matrix.branch }}_artifact.tar
        retention-days: 2
        
    - name: Release
      uses: softprops/action-gh-release@v1  
      with:
        if: startsWith(github.ref, 'refs/tags/')
        files: |
          ${{ matrix.machine }}-${{ matrix.branch }}_artifact.tar
        # note you'll typically need to create a personal access token
        # with permissions to create releases in the other repo
        token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}            
      
        
      
#    - name: Upload src artifact
#      uses: actions/upload-artifact@v3
#      with:
#        name: ${{ matrix.machine }}-${{ matrix.branch }}
#        path: |
#          Marlin_*.zip        
        

#    env:
#      MARLIN_VERSION: ${{ matrix.branch }}
#      CONFIG_NAME: ${{ matrix.machine }}
#    name: ${{ matrix.machine }}-${{ matrix.branch }}

        
    - name: Upload src artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.machine }}-${{ matrix.branch }}
        path: |
          Marlin_*.zip
          
    - name: Upload built artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.machine }}-${{ matrix.branch }}
        path: |
          firmware*
          Marlin_*.zip          
          
#      - name: Upload Marlin-${{ matrix.machine }}-${{ matrix.branch }}.zip to release
#        if: ${{ github.event_name == 'release' }}
#          uses: actions/upload-release-asset@v1
#          env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ github.event.release.upload_url }}
#          asset_path: Marlin-Release.zip
#          asset_name: ${{ matrix.machine }}-${{ matrix.branch }}.zip
#          asset_content_type: application/zip                   

    - name: Show files changed
      run: |
        ls -la -R  ./
        ls -la -R  $HOME/
        

    
