name: Build cnc_firmware

on:
#  push:
#    branches: [ main ]
#    tags:
#      - "v*.*.*"
#    paths-ignore:
#      - 'MarlinFirmware/**' 
#      - 'examples_gcode/**'
#  pull_request:
#    branches: [ main ]
    
    
  workflow_dispatch:
    inputs:
      board:
        required: true
        default: mega2560
        description: Board environment  
      config:
        required: true
        default: https://github.com/MarlinFirmware/Configurations/config/default
        description: Configuration directory
      repository:
        required: true
        default: MarlinFirmware/Marlin
        description: Marlin Repository
      ref:
        description: Branch / tag / SHA to checkout


  
#permissions:
#  actions: read|write|none
#  checks: read|write|none
#  contents: read|write|none
#  deployments: read|write|none
#  id-token: read|write|none
#  issues: read|write|none
#  discussions: read|write|none
#  packages: read|write|none
#  pages: read|write|none
#  pull-requests: read|write|none
#  repository-projects: read|write|none
#  security-events: read|write|none
#  statuses: read|write|none
  
  
  
jobs:
  build:
    name: deploy to staging
    runs-on: ubuntu-latest
    
    env:
      MARLIN_VERSION: ${{ matrix.branch }}
      CONFIG_NAME: ${{ matrix.machine }}    
    
    strategy:
      fail-fast: false # Allow all machines to finish building
      matrix:
        branch: ${{ fromJson(
          github.event_name == 'schedule' && '["bugfix-2.1.x"]' ||
          github.event_name == 'pull_request' && '["bugfix-2.1.x", "2.1.2"]' ||
          '["2.1.2"]') }}
        machine:
        - cnc_stroj_v2_Ramps
        - default_Ramps      

    steps:
    # Cloning my repository to the runner:
    - name: Checkout source repository
      uses: actions/checkout@v3
    
    # Cloning repository to the runner:
    - name: Check out MarlinFirmware
      uses: actions/checkout@v3
      with:
        repository: MarlinFirmware/Marlin
        ref: ${{ matrix.branch }}
        path: Marlin 
        clean: true
#        fetch-depth: 1
  
    - name: Select Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10' # Version range or exact version of a Python version to use, using semvers version range syntax.
        architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified      
 
    - name: Install PlatformIO Core
      run: |
        pip install --upgrade platformio
        pio lib --global install olikraus/U8glib@^1.19.1  
#        pio pkg install --global --platform symlink://.        

#    - name: Pre-compiling configuration
#      run: |
#        cp -r "${{ github.event.inputs.config }}"/* Marlin/Marlin/
        
    - name: Compile firmware
      run: |
        pio run --project-dir Marlin --environment mega2560
        
    - name: release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: ${{ steps.version.outputs.version }}
        tag_name: ${{ github.ref }}
        body_path: CHANGELOG.md
      env:
        GITHUB_TOKEN: ${{ github.token }}        
    permissions:
      contents: write
        
    - name: upload linux artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./bin/azblogfilter.linux-amd64.tar.gz
        asset_name: azblogfilter.linux-amd64.tar.gz
        asset_content_type: application/gzip        
        
    - name: Tar files
#      run: tar -cvf ${{ matrix.machine }}-${{ matrix.branch }}_artifact.tar ./
      run: zip -r ${{ matrix.machine }}-${{ matrix.branch }}_artifact.zip ./

    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: my-artifact
        path: ${{ matrix.machine }}-${{ matrix.branch }}_artifact.tar
        retention-days: 2
        
    - name: Upload Marlin-${{ matrix.machine }}-${{ matrix.branch }}.zip to release
      if: ${{ github.event_name == 'release' }}
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
#        asset_path: ${{ matrix.machine }}-${{ matrix.branch }}_artifact.tar
#        asset_name: ${{ matrix.machine }}-${{ matrix.branch }}.zip
        asset_name: ${{ matrix.machine }}-${{ matrix.branch }}_artifact.zip
        asset_content_type: application/zip   
        
    - uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ matrix.machine }}-${{ matrix.branch }}_artifact.tar
        asset_name: my-artifact.zip
        asset_content_type: application/zip        
        
        
#    - name: Release
#      uses: softprops/action-gh-release@v1  
#      with:
#        if: startsWith(github.ref, 'refs/tags/')
#        files: |
#          ${{ matrix.machine }}-${{ matrix.branch }}_artifact.tar
        # note you'll typically need to create a personal access token
        # with permissions to create releases in the other repo
#        token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}            
#      env:
#        GITHUB_REPOSITORY: my_gh_org/my_gh_repo      
        
      
#    - name: Upload src artifact
#      uses: actions/upload-artifact@v3
#      with:
#        name: ${{ matrix.machine }}-${{ matrix.branch }}
#        path: |
#          Marlin_*.zip        
        

#    env:
#      MARLIN_VERSION: ${{ matrix.branch }}
#      CONFIG_NAME: ${{ matrix.machine }}
#    name: ${{ matrix.machine }}-${{ matrix.branch }}

        
    - name: Upload src artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.machine }}-${{ matrix.branch }}
        path: |
          Marlin_*.zip
          
    - name: Upload built artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.machine }}-${{ matrix.branch }}
        path: |
          *.hex
          firmware*
          Marlin_*.zip          
          
#      - name: Upload Marlin-${{ matrix.machine }}-${{ matrix.branch }}.zip to release
#        if: ${{ github.event_name == 'release' }}
#          uses: actions/upload-release-asset@v1
#          env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ github.event.release.upload_url }}
#          asset_path: Marlin-Release.zip
#          asset_name: ${{ matrix.machine }}-${{ matrix.branch }}.zip
#          asset_content_type: application/zip       

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Upload Artifact
      uses: actions/upload-artifact@v3
      with:
        name: my-artifact
        path: ${{ matrix.machine }}-${{ matrix.branch }}_artifact.tar
        retention-days: 2
  
    - name: Show files changed
      run: |
        ls -la -R  ./
        ls -la -R  $HOME/
        

    
